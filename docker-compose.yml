version: '3.8'

services:
  
  traefik:
    image: traefik:v2.4.8
    hostname: traefik
    networks:
      - traefik-public
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      - ./traefik-data/acme.json:/acme.json
      - ./traefik-data/configurations:/configurations
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
  
        # Secure entrypoint
        - "traefik.http.routers.traefik-secure.entrypoints=websecure"
        - "traefik.http.routers.traefik-secure.rule=Host(`${TRAEFIK_HOSTNAME}`)"
        - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
        - "traefik.http.routers.traefik-secure.service=api@internal"
        # Dummy service for Swarm port detection. The port can be any valid integer value.
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"

  portainer:
    image: portainer/portainer-ce:alpine
    hostname: portainer
    networks:
      - traefik-public
    volumes:
      - ./portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOSTNAME}`)"
        - "traefik.http.routers.portainer.service=portainer-service"
        - "traefik.http.services.portainer-service.loadbalancer.server.port=9000"

networks:
  traefik-public:
    external: true
