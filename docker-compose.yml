version: '3.8'

services:
  
  traefik:
    image: traefik:v2.4.8
    hostname: traefik
    networks:
      - traefik-public
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      - ./traefik-data/acme.json:/acme.json
      - ./traefik-data/configurations:/configurations
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"

      # Secure entrypoint
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`${TRAEFIK_HOSTNAME}`)"
      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file, ipwhitelist@file"
      - "traefik.http.routers.traefik-secure.service=api@internal"  

  portainer:
    image: portainer/portainer-ce:alpine
    hostname: portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    networks:
      - agent
      - traefik-public
    volumes:
      - portainer-data:/data
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOSTNAME}`)"
      - "traefik.http.routers.portainer.middlewares=ipwhitelist@file"
      - "traefik.http.routers.portainer.service=portainer-service"
      - "traefik.http.services.portainer-service.loadbalancer.server.port=9000"

  portainer-agent:
    image: portainer/agent:latest
    hostname: agent
    networks:
      - agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    deploy:
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.platform.os == linux
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s

networks:
  agent:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

volumes:
  portainer-data:
    driver: glusterfs
    name: "config-1/core"